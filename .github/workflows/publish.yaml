name: Publish

on:
  workflow_dispatch:
    inputs:
      vibingbase-app-env:
        type: choice
        options: [development, production]
        required: true
      vibingbase-app-id:
        type: string
        required: true
      vibingbase-request-url:
        type: string
        required: true
      vibingbase-download-url:
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }} ${{ inputs.vibingbase-app-env }}-${{ inputs.vibingbase-app-id }}

jobs:
  pre-publish:
    name: Pre-publish ${{ inputs.vibingbase-app-env }}-${{ inputs.vibingbase-app-id }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-workflow
      - uses: ./.github/actions/make-request
        with:
          development-secret: ${{ secrets.VIBINGBASE_DEVELOPMENT_SECRET }}
          production-secret: ${{ secrets.VIBINGBASE_PRODUCTION_SECRET }}
          app-env: ${{ inputs.vibingbase-app-env }}
          app-id: ${{ inputs.vibingbase-app-id }}
          request-url: ${{ inputs.vibingbase-request-url }}
          request-action: pre-publish
          request-body: |
            {
              "type": "gha",
              "id": ${{ github.run_id }},
              "attempt": ${{ github.run_attempt }}
            }
  publish:
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    name: ${{ github.workflow }} ${{ inputs.vibingbase-app-env }}-${{ inputs.vibingbase-app-id }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    needs: [pre-publish]
    permissions:
      contents: write
    outputs:
      version: ${{ steps.tauri.outputs.appVersion }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-workspace
      - run: node setup-app.js
        env:
          VIBINGBASE_DEVELOPMENT_SECRET: ${{ secrets.VIBINGBASE_DEVELOPMENT_SECRET }}
          VIBINGBASE_PRODUCTION_SECRET: ${{ secrets.VIBINGBASE_PRODUCTION_SECRET }}
          VIBINGBASE_APP_ENV: ${{ inputs.vibingbase-app-env }}
          VIBINGBASE_APP_DIR: ${{ runner.temp }}/${{ inputs.vibingbase-app-id }}
          VIBINGBASE_DOWNLOAD_URL: ${{ inputs.vibingbase-download-url }}
      - run: pnpm install
        working-directory: ${{ runner.temp }}/${{ inputs.vibingbase-app-id }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ runner.os == 'macOS' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - uses: swatinem/rust-cache@v2
        with:
          shared-key: ${{ inputs.vibingbase-app-id }}
          workspaces: ${{ runner.temp }}/${{ inputs.vibingbase-app-id }}/src-tauri
      - if: runner.os == 'macOS'
        id: prepare-apple-signing-identity
        name: Prepare Apple signing identity
        run: |
          echo $APPLE_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p github-actions build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p github-actions build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k github-actions build.keychain
          rm certificate.p12
          APPLE_SIGNING_INFO=$(security find-identity -v -p codesigning build.keychain | grep "Developer ID Application")
          APPLE_SIGNING_IDENTITY=$(echo "$APPLE_SIGNING_INFO" | awk -F'"' '{print $2}')
          echo "APPLE_SIGNING_IDENTITY=$APPLE_SIGNING_IDENTITY" >> $GITHUB_OUTPUT
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      - if: runner.os == 'Windows'
        shell: pwsh
        run: Invoke-WebRequest -Uri "https://github.com/Levminer/trusted-signing-cli/releases/download/0.8.0/trusted-signing-cli.exe" -OutFile "$env:windir\trusted-signing-cli.exe"
      - id: tauri
        uses: tauri-apps/tauri-action@v0
        with:
          args: ${{ runner.os == 'macOS' && '--target universal-apple-darwin' || '' }}
          tauriScript: pnpm exec tauri
          projectPath: ${{ runner.temp }}/${{ inputs.vibingbase-app-id }}
          tagName: ${{ inputs.vibingbase-app-env }}-${{ inputs.vibingbase-app-id }}@v__VERSION__
          releaseName: ${{ inputs.vibingbase-app-env }}-${{ inputs.vibingbase-app-id }}@v__VERSION__
          releaseBody: |
            **App ID**: `${{ inputs.vibingbase-app-id }}`
            **App Version**: `__VERSION__`
            **App Environment**: `${{ inputs.vibingbase-app-env }}`
            *Built with [Vibingbase](https://www.vibingbase.com) âœ¨*
          includeUpdaterJson: false
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_ID: ${{ vars.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}
          APPLE_SIGNING_IDENTITY: ${{ steps.prepare-apple-signing-identity.outputs.APPLE_SIGNING_IDENTITY }}
          AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - shell: bash
        run: rm -rf ${{ runner.temp }}/${{ inputs.vibingbase-app-id }}/src-tauri/target${{ runner.os == 'macOS' && '/universal-apple-darwin/' || '/' }}release/bundle
  post-publish:
    name: Post-publish ${{ inputs.vibingbase-app-env }}-${{ inputs.vibingbase-app-id }}
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-workflow
      - uses: ./.github/actions/make-request
        with:
          development-secret: ${{ secrets.VIBINGBASE_DEVELOPMENT_SECRET }}
          production-secret: ${{ secrets.VIBINGBASE_PRODUCTION_SECRET }}
          app-env: ${{ inputs.vibingbase-app-env }}
          app-id: ${{ inputs.vibingbase-app-id }}
          request-url: ${{ inputs.vibingbase-request-url }}
          request-action: post-publish
          request-body: |
            {
              "version": "${{ needs.publish.outputs.version }}"
            }
